import Head from "next/head";
import { Inter } from "next/font/google";
import { useEffect, useState } from "react";
import axios from "axios";

import styled from "styled-components";
import { AiFillEdit, AiFillDelete } from "react-icons/ai";

import { colors } from "@/config/colors";
import Loader from "@/components/Loader";

const Title = styled.h1`
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 10px auto 0;
  background-image: linear-gradient(45deg, #111111, #fd7a23);
  background-size: 100%;
  background-repeat: repeat;
  -webkit-background-clip: text;
  background-clip: text;
  text-align: left;
  -webkit-text-fill-color: transparent;
  padding-bottom: 20px;
  font-size: 35px;
`;

const NewTodo = styled.div``;

const TodoItems = styled.div`
  max-width: 1140px;
  width: 100%;
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 20px;
`;

const TODOList = styled.ul`
  color: ${colors.textC};
  background-color: #a2a8d3;
  border-radius: 8px;
  border: 2px solid #233142;
  max-width: 250px;
  width: 100%;
  height: 300px;
  display: flex;
  align-items: baseline;
  /* justify-content: center; */
  flex-direction: column;
  padding: 20px;
`;

const TodoID = styled.li`
  list-style-type: none;
  font-size: 26px;
  color: #38598b;
  font-weight: 600;
`;

const Text = styled.li`
  list-style-type: none;
  font-size: 18px;
  color: #113f67;
  font-weight: 600;
`;

const TODOItems = styled.li`
  list-style-type: none;
  :nth-child(1) {
    font-size: 26px;
    color: #38598b;
    font-weight: 600;
  }
`;

export default function Home() {
  const [first, setfirst] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const [text, setText] = useState("");
  const [isCompleted, setIsCompleted] = useState(false);

  useEffect(() => {
    setIsLoading(true);
    axios
      .get("http://localhost:3001/todo-items")
      .then((res) => {
        setfirst(res.data);
        setIsLoading(false);
      })
      .catch((error) => console.error(error));
    // console.log(first);
  }, []);

  function name(params) {}
  return (
    <>
      <Head>
        <title>Todo List</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Title>My To Do List</Title>
        <NewTodo>
          <form>
            <section>
              <label for="text">Text</label>
              <input
                type="text"
                placeholder="Add your todo"
                onChange={(e) => {
                  setText(e.target.value);
                  console.log(e.target.value);
                }}
                name="text"
                id="text"
              />
            </section>
            <section>
              <label for="complete">isCompleted</label>
              <input
                type="checkbox"
                name="complete"
                id="complete"
                onChange={(e) => {
                  setIsCompleted(e.target.value);
                  console.log(e.target.value);
                }}
              />
            </section>
            <button>Add To Do</button>
          </form>
        </NewTodo>
        {isLoading ? (
          <Loader />
        ) : (
          <TodoItems>
            {first.map((todo, idx) => (
              <TODOList key={idx}>
                <TodoID>Todo id: {todo.id}</TodoID>
                <Text>{todo.text}</Text>
                <TODOItems>
                  {todo.isCompleted} <AiFillEdit size={25} color={"#113f67"} />
                  <AiFillDelete size={25} color={"#113f67"} />
                </TODOItems>
              </TODOList>
            ))}
          </TodoItems>
        )}
      </main>
    </>
  );
}
